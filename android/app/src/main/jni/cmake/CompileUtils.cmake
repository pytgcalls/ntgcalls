file(READ ${PLATFORM_UTILS_CMAKE_DIR} _PLATFORM_UTILS_CONTENTS)
string(REGEX REPLACE "\n" ";" _PLATFORM_UTILS_CONTENTS "${_PLATFORM_UTILS_CONTENTS}")

set(BASE_COMPILE_OPTIONS)
set(BASE_COMPILE_DEFINITIONS)
set(_READING_FUNCTION OFF)
set(_READING_ANDROID_IF OFF)
set(_READING_OPTIONS OFF)
set(_READING_DEFINITIONS OFF)

foreach (_LINE IN LISTS _PLATFORM_UTILS_CONTENTS)
    if (_LINE MATCHES "target_compile_options")
        set(_READING_OPTIONS ON)
        continue()
    elseif (_LINE MATCHES "setup_platform_flags")
        set(_READING_FUNCTION ON)
        continue()
    elseif (_LINE MATCHES "target_compile_definitions")
        set(_READING_DEFINITIONS ON)
        continue()
    elseif (_LINE MATCHES "endfunction")
        set(_READING_FUNCTION OFF)
        continue()
    elseif (_LINE MATCHES "elseif \\(ANDROID\\)")
        set(_READING_ANDROID_IF ON)
        continue()
    elseif (_LINE MATCHES "elseif \\(.*\\)")
        set(_READING_ANDROID_IF OFF)
        continue()
    endif()
    if ((_READING_OPTIONS OR _READING_DEFINITIONS) AND _READING_FUNCTION AND _READING_ANDROID_IF)
        if (_LINE MATCHES "PRIVATE" OR _LINE MATCHES "PUBLIC")
            continue()
        endif()
        if (_LINE MATCHES "\\)")
            set(_READING_OPTIONS OFF)
            set(_READING_DEFINITIONS OFF)
            continue()
        endif()
        string(STRIP "${_LINE}" _LINE)
        if (_READING_OPTIONS)
            list(APPEND BASE_COMPILE_OPTIONS ${_LINE})
        else ()
            list(APPEND BASE_COMPILE_DEFINITIONS ${_LINE})
        endif()
    endif()
endforeach()